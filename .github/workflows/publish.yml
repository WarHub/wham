name: Publish
on:
  release:
    types: [published]
jobs:
  publish-nugets:
    runs-on: ubuntu-latest
    env:
      DOTNET_NOLOGO: 1
      Configuration: Release
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # all history
      - name: Read .NET Core SDK version
        id: globaljson
        shell: pwsh
        run: |
          dotnet --version
          if ($LASTEXITCODE -ne 0) { # if dotnet didn't find version required by globaljson, it exits with non-0 code
            Write-Host "::set-output name=version::$((Get-Content global.json -Raw | ConvertFrom-Json).sdk.version)"
          }
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ steps.globaljson.outputs.version }}
      - run: dotnet --info
      - run: dotnet tool restore
      - run: dotnet nbgv get-version
      - run: dotnet restore -v m
      - run: dotnet build --no-restore
      - run: dotnet test --no-build
      - name: Upload nugets to workflow artifacts
        uses: actions/upload-artifact@v2
        with:
          name: nugets
          path: bin/Packages/${{ env.Configuration }}
      - name: Publish to NuGet.org
        shell: pwsh
        run: |
          dotnet nuget push bin/Packages/${{ env.Configuration }}/*.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_APIKEY }}
      # TODO Upload packages to release assets
