
trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  BuildConfiguration: 'Release'
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

steps:
- task: UseDotNet@2
  displayName: 'Install .NET Core SDK 3.0'
  inputs:
    useGlobalJson: true
    performMultiLevelLookup: true
- task: UseDotNet@2
  displayName: 'Install .NET Core SDK 2.2'
  inputs:
    version: '2.2.x'
    performMultiLevelLookup: true

- script: dotnet tool restore
  displayName: Restore dotnet tools

- script: dotnet nbgv cloud
  displayName: Set build number
  condition: and(succeeded(), ne(variables['system.pullrequest.isfork'], true))

- script: dotnet --info
  displayName: Show dotnet SDK info

- task: DotNetCoreCLI@2
  displayName: Restore NuGet packages
  inputs:
    command: restore
    verbosityRestore: Minimal

- task: DotNetCoreCLI@2
  displayName: Build solution
  inputs:
    command: build
    arguments: --no-restore -c $(BuildConfiguration)

- task: DotNetCoreCLI@2
  displayName: Run tests
  inputs:
    command: test
    arguments: --no-build -c $(BuildConfiguration)

- task: CopyFiles@1
  displayName: Collecting packages
  inputs:
    Contents: |
      bin/Packages/$(BuildConfiguration)/*.nupkg
      bin/Packages/$(BuildConfiguration)/*.snupkg
    TargetFolder: $(Build.ArtifactStagingDirectory)/nugets
    flattenFolders: true

- task: PublishPipelineArtifact@0
  displayName: Publish nuget artifacts
  inputs:
    artifactName: nugets
    targetPath: $(Build.ArtifactStagingDirectory)/nugets
